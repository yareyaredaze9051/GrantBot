import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–ª–∏–º–ø–∏–∞–¥ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ä–µ–∞–ª—å–Ω–æ–π –ë–î)
olympiads_db = {
    "–ú–æ—Å–∫–≤–∞": {
        "–í—Å–µ—Ä–æ—Å": {
            "level": 1,
            "benefits": "–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π (–ë–í–ò) –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
            "subjects": ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏–∫–∞", "–•–∏–º–∏—è", "–ë–∏–æ–ª–æ–≥–∏—è", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–ò—Å—Ç–æ—Ä–∏—è",
                         "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"]
        },
        "–û–ª–∏–º–ø–∏–∞–¥–∞ –°–ü–±–ì–£": {
            "level": 2,
            "benefits": "100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –∏–ª–∏ –ë–í–ò –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –∏ —Å—Ç–µ–ø–µ–Ω–∏ –¥–∏–ø–ª–æ–º–∞",
            "subjects": ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏–∫–∞", "–•–∏–º–∏—è", "–ë–∏–æ–ª–æ–≥–∏—è", "–≠–∫–æ–Ω–æ–º–∏–∫–∞", "–ü—Ä–∞–≤–æ"]
        },
        "–í—ã—Å—à–∞—è –ø—Ä–æ–±–∞": {
            "level": 1,
            "benefits": "–ë–í–ò –∏–ª–∏ 100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É",
            "subjects": ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–≠–∫–æ–Ω–æ–º–∏–∫–∞", "–ü—Ä–∞–≤–æ", "–§–∏–ª–æ—Å–æ—Ñ–∏—è", "–°–æ—Ü–∏–æ–ª–æ–≥–∏—è"]
        },
        "–§–∏–∑—Ç–µ—Ö": {
            "level": 2,
            "benefits": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã –∏–ª–∏ –ë–í–ò –≤ –ú–§–¢–ò",
            "subjects": ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏–∫–∞"]
        },
        "–õ–æ–º–æ–Ω–æ—Å–æ–≤": {
            "level": 1,
            "benefits": "–ë–í–ò –∏–ª–∏ 100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É",
            "subjects": ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏–∫–∞", "–•–∏–º–∏—è", "–ë–∏–æ–ª–æ–≥–∏—è", "–ì–µ–æ–ª–æ–≥–∏—è", "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è"]
    }},
    "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥": {
        "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –û–ª–∏–º–ø–∏–∞–¥–∞ –ü—Ä–æ—Ñ–∏–ª—å –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –î–æ–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –†–µ–∞–ª—å–Ω–æ—Å—Ç–∏": {
            "level": 3,
            "benefits": "–ë–í–ò –∏–ª–∏ 100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –í–£–ó—ã",
            "subjects": ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"]

        },
        "–ë—É–¥—É—â–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ - –ë—É–¥—É—â–µ–µ –Ω–∞—É–∫–∏": {
            "level": 2,
            "benefits": "–ë–í–ò –∏–ª–∏ 100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –í–£–ó—ã",
            "subjects": ["–§–∏–∑–∏–∫–∞", "–•–∏–º–∏—è", "–ò—Å—Ç–æ—Ä–∏—è"]
    }
    },
    "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥": {
        "–û—Ç–∫—Ä—ã—Ç–∞—è –û–ª–∏–º–ø–∏–∞–¥–∞ –®–∫–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ –ò–¢–ú–û": {
            "level": 1,
            "benefits": "–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π (–ë–í–ò) –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
            "subjects": ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"]
    },
        "–û–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –°–ü–±–ì–£":{
            "level": 1,
            "benefits": "–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π (–ë–í–ò) –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
            "subjects": ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏–∫–∞"]
    },
        "–û—Ç—Ä–∞—Å–ª–µ–≤–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ '–ì–∞–∑–ø—Ä–æ–º'":{
            "level": 3,
            "benefits": "–ë–í–ò –∏–ª–∏ 100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –í–£–ó—ã",
            "subjects": ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏–∫–∞", "–•–∏–º–∏—è", "–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ–µ –¥–µ–ª–æ"]
        }
    }
}


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –æ –ª—å–≥–æ—Ç–∞—Ö –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –ø–æ –æ–ª–∏–º–ø–∏–∞–¥–∞–º.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/olympiads - —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥ —Å –ª—å–≥–æ—Ç–∞–º–∏\n"
        "/benefits - —É–∑–Ω–∞—Ç—å –ª—å–≥–æ—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã"
    )


# –ö–æ–º–∞–Ω–¥–∞ /olympiads - —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥
async def olympiads(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not context.args:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: /olympiads –ú–æ—Å–∫–≤–∞")
        return
    keyboard = []
    city = " ".join(context.args)
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã
    for olympiad in olympiads_db[city]:
        keyboard.append([InlineKeyboardButton(olympiad, callback_data=f"olympiad_{olympiad}")])

    reply_markup = InlineKeyboardMarkup(keyboard)
    print(reply_markup)
    await update.message.reply_text(
        "–°–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥, –¥–∞—é—â–∏—Ö –ª—å–≥–æ—Ç—ã –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏:",
        reply_markup=reply_markup
    )


# –ö–æ–º–∞–Ω–¥–∞ /benefits - –ø–æ–∏—Å–∫ –ª—å–≥–æ—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
async def benefits(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not context.args:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: /benefits –í—Å–µ—Ä–æ—Å")
        return
    found = False
    olympiad_name = " ".join(context.args)
    for city in olympiads_db.keys():
        if olympiad_name in olympiads_db[city].keys():
            data = olympiads_db[city][olympiad_name]
            await send_olympiad_info(update, olympiad_name, data)
            found = True
            break

    if not found:
        await update.message.reply_text(
            "–û–ª–∏–º–ø–∏–∞–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥ –∫–æ–º–∞–Ω–¥–æ–π /olympiads")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    if query.data.startswith("olympiad_"):
        olympiad_name = query.data[9:]
        if olympiad_name in olympiads_db:
            await send_olympiad_info_query(query, olympiad_name, olympiads_db[olympiad_name])
        else:
            await query.edit_message_text("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç—Ç–æ–π –æ–ª–∏–º–ø–∏–∞–¥–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–ª–∏–º–ø–∏–∞–¥–µ (–¥–ª—è –∫–æ–º–∞–Ω–¥—ã /benefits)
async def send_olympiad_info(update: Update, name: str, data: dict) -> None:
    message = (
        f"üèÜ <b>{name}</b>\n\n"
        f"üîπ –£—Ä–æ–≤–µ–Ω—å: {data['level']}\n"
        f"üîπ –õ—å–≥–æ—Ç—ã: {data.get('benefits', '–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏')}\n"
        f"üîπ –ü—Ä–µ–¥–º–µ—Ç—ã: {', '.join(data['subjects'])}\n\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —É—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ –≤—É–∑–∞ –∏–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø—Ä–∏–µ–º–∞."
    )
    await update.message.reply_text(message, parse_mode='HTML')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–ª–∏–º–ø–∏–∞–¥–µ (–¥–ª—è inline-–∫–Ω–æ–ø–æ–∫)
async def send_olympiad_info_query(query, name: str, data: dict) -> None:
    message = (
        f"üèÜ <b>{name}</b>\n\n"
        f"üîπ –£—Ä–æ–≤–µ–Ω—å: {data['level']}\n"
        f"üîπ –õ—å–≥–æ—Ç—ã: {data.get('benefits', '–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏')}\n"
        f"üîπ –ü—Ä–µ–¥–º–µ—Ç—ã: {', '.join(data['subjects'])}\n\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —É—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ –≤—É–∑–∞ –∏–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø—Ä–∏–µ–º–∞."
    )
    await query.edit_message_text(message, parse_mode='HTML')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    logger.error("Exception while handling an update:", exc_info=context.error)
    await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


def main() -> None:
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    application = Application.builder().token("8152366556:AAGqqyyJNYOUwESXyaTxCb5Yn4r_92L15so").build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("olympiads", olympiads))
    application.add_handler(CommandHandler("benefits", benefits))
    application.add_handler(CallbackQueryHandler(button))

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()


if __name__ == "__main__":
    main()